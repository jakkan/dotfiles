### DISPLAY

# Use 256 colors true color
set-option -ga terminal-overrides ",screen-256color*:Tc"
set-option -g default-terminal "screen-256color"

# Set parent terminal title to reflect current window in tmux session. Don't allow applications to rename window
set-option -g set-titles on
set-option -g set-titles-string " #{session_group}:#I-#W "
set-option -g allow-rename off

# Status right by default shows selected pane and time
set-option -g status-left ''
set-option -g status-right '[ #{session_group} ]'

# Status bar color to match i3
set-option -g status-style bg='#333333',fg='#ffffff'
set-window-option -g window-status-current-style bg='#008800',fg='#ffffff'
set -g status-position top

# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# Start index at 1 to match keyboard number keys
set-option -g base-index 1
#set-option -g pane-base-index 1

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 2500

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5

# Alert settings, not sure about these, it seems most popular to have monitor-activity and visual-activity on
set-window-option -g monitor-activity off
set-option -g visual-activity off
set-option -g visual-silence off
set-option -g visual-bell off
set-option -g bell-action none

### SHELL-LIKE

# Default shell
set-option -g default-shell ${SHELL}
set-option -g default-command ${SHELL}

# Enable mouse mode
set-option -g mouse on

# Meta and fn modifies keys are sent as sequences starting with esc. Setting is how long tmux should wait before sending esc code as esc to application. Can be low value on local sessions or fast networks.
set-option -s escape-time 0

# Keep plenty of history for scrollback
set-option -g history-limit 10000

# I don't quite understand this but it should be on
set-option -g focus-events on

# Practically disables repeat without needing to enter prefix again, but on the other hand allows ordinary input immediately
set-option -g repeat-time 0

# Resize window to smallest client viewing session, not to smallest client attached to session
setw -g aggressive-resize on

### KEYMAPS

# Unbund everything since I only use some tmux features (windows and sessions, not panes and copy/paste) and the default bindings are not very friendly
unbind-key -a -T prefix
#unbind-key -a -T root
#unbind-key -a -T copy-mode
#unbind-key -a -T copy-mode-vi

# Use vim interaction mode
#set -g mode-keys vi

# Similar prefix as in vim
set-option -g prefix M-Space



### PREFIXED KEYMAPS

bind-key : command-prompt
bind-key q source-file ~/.config/tmux/tmux.conf \; display "Reloaded ~/.tmux.conf"
bind-key r command-prompt -I "#W" "rename-window '%%'"
bind-key R command-prompt -I "#S" "rename-session '%%'"
bind-key c new-window -c "#{pane_current_path}"
bind-key d detach-client
bind-key m swap-window -t +1\; select-window -t +1
bind-key M swap-window -t -1\; select-window -t -1
# bind-key k confirm-before -p "kill-window #W? (y/n)" kill-window
# bind-key K confirm-before -p "kill-session #S? (y/n)" kill-session
bind-key k kill-window
bind-key K kill-session
bind-key n next-window
bind-key N switch-client -n
bind-key p previous-window
bind-key P switch-client -p
bind-key l last-window
bind-key L switch-client -l
bind-key s choose-tree
bind-key 1 select-window -t:1
bind-key 2 select-window -t:2
bind-key 3 select-window -t:3
bind-key 4 select-window -t:4
bind-key 5 select-window -t:5
bind-key 6 select-window -t:6
bind-key 7 select-window -t:7
bind-key 8 select-window -t:8
bind-key 9 select-window -t:9
bind-key 0 select-window -t:10



### UNPREFIXED KEYMAPS

# Unprefixed Meta to cycle through windows.
bind-key -n M-1 select-window -t:1
bind-key -n M-2 select-window -t:2
bind-key -n M-3 select-window -t:3
bind-key -n M-4 select-window -t:4
bind-key -n M-5 select-window -t:5
bind-key -n M-6 select-window -t:6
bind-key -n M-7 select-window -t:7
bind-key -n M-8 select-window -t:8
bind-key -n M-9 select-window -t:9
bind-key -n M-0 select-window -t:10
bind-key -n M-c new-window -c "#{pane_current_path}"
bind-key -n M-d detach-client
bind-key -n M-k kill-window
bind-key -n M-t choose-tree
bind-key -n M-r command-prompt -I "#W" "rename-window '%%'"
bind-key -n M-R command-prompt -I "#S" "rename-session '%%'"
