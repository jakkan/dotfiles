# Config for tmux 3.2a

### DISPLAY

# Use 256 colors true color
set-option -ga terminal-overrides ",screen-256color*:Tc"
set-option -g default-terminal "screen-256color"

# Set parent terminal title to reflect current window in tmux session. Don't allow applications to rename window
set-option -g set-titles on
set-option -g set-titles-string " #{session_group}:#{window_index}-#{window_name} "
set-option -g allow-rename off

# Status right by default shows selected pane and time
set-option -g status-left ''
set-option -g status-right '[ #{session_group} ]'

# Status bar color to match i3
set-option -g status-style bg='#333333',fg='#ffffff'
set-window-option -g window-status-current-style bg='#008800',fg='#ffffff'
set -g status-position top

# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# Start index at 1 to match keyboard number keys
set-option -g base-index 1
#set-option -g pane-base-index 1

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 2500

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5

# Alert settings, not sure about these, it seems most popular to have monitor-activity and visual-activity on
set-window-option -g monitor-activity off
set-option -g visual-activity off
set-option -g visual-silence off
set-option -g visual-bell off
set-option -g bell-action none

### SHELL-LIKE

# Default shell
set-option -g default-shell ${SHELL}
set-option -g default-command ${SHELL}

# Enable mouse mode
set-option -g mouse on

# Meta and fn modifies keys are sent as sequences starting with esc. Setting is how long tmux should wait before sending esc code as esc to application. Can be low value on local sessions or fast networks.
set-option -s escape-time 0

# Keep plenty of history for scrollback
set-option -g history-limit 10000

# I don't quite understand this but it should be on
set-option -g focus-events on

# Practically disables repeat without needing to enter prefix again, but on the other hand allows ordinary input immediately
set-option -g repeat-time 0

# Resize window to smallest client viewing session, not to smallest client attached to session
setw -g aggressive-resize on

### COPY-MODE & VIEW-MODE

# Use vim key mappings in  
set -g mode-keys vi

# Don't want to change the defaults, but this is how unbinding would be done
#unbind-key -a -T copy-mode-vi

### PREFIXED KEYMAPPINGS

# Start by unbinding everything in prefix table since I don't use panes and am making the bindings similar to my i3 config
unbind-key -a -T prefix
# For some reason there is no reasonable default mapping to start some kind of reasonable selection
bind -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Reasonable alternative if I have any problems with copy-selection-and-cancel
#bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard';

# Important copy-mode-vi key mappings
# escape clear-selection
# q cancel

# Similar prefix to what I use in neovim
set-option -g prefix M-Space

bind-key -T prefix : command-prompt
bind-key -T prefix q source-file ~/.config/tmux/tmux.conf \; display "Reloaded ~/.tmux.conf"
bind-key -T prefix r command-prompt -I "#{window_name}" "rename-window '%%'"
bind-key -T prefix R command-prompt -I "#{session_name}" "rename-session '%%'"
bind-key -T prefix n new-window -c "#{pane_current_path}"
bind-key -T prefix d detach-client
bind-key -T prefix m swap-window -t +1\; select-window -t +1
bind-key -T prefix M swap-window -t -1\; select-window -t -1
bind-key -T prefix x kill-window
bind-key -T prefix X kill-session
bind-key -T prefix t choose-tree
bind-key -T prefix 1 select-window -t:1
bind-key -T prefix 2 select-window -t:2
bind-key -T prefix 3 select-window -t:3
bind-key -T prefix 4 select-window -t:4
bind-key -T prefix 5 select-window -t:5
bind-key -T prefix 6 select-window -t:6
bind-key -T prefix 7 select-window -t:7
bind-key -T prefix 8 select-window -t:8
bind-key -T prefix 9 select-window -t:9
bind-key -T prefix 0 select-window -t:10
bind-key -T prefix Tab last-window

### UNPREFIXED KEYMAPPINGS

# Root table is empty by default so no need to unbind keys
#unbind-key -a -T root

# For convenience I have bound everyday commads to meta keymappings I don't use in any terminal application
bind-key -T root M-1 select-window -t:1
bind-key -T root M-2 select-window -t:2
bind-key -T root M-3 select-window -t:3
bind-key -T root M-4 select-window -t:4
bind-key -T root M-5 select-window -t:5
bind-key -T root M-6 select-window -t:6
bind-key -T root M-7 select-window -t:7
bind-key -T root M-8 select-window -t:8
bind-key -T root M-9 select-window -t:9
bind-key -T root M-0 select-window -t:10
bind-key -T root M-Tab last-window
bind-key -T root M-n new-window -c "#{pane_current_path}"
bind-key -T root M-d detach-client
bind-key -T root M-x kill-window
bind-key -T root M-t choose-tree
bind-key -T root M-r command-prompt -I "#{window_name}" "rename-window '%%'"
bind-key -T root M-R command-prompt -I "#{session_name}" "rename-session '%%'"
bind-key -T root M-c copy-mode

